name: OBS release

on:
  workflow_call:
    inputs:
      update_changelog:
        type: boolean
        required: false
        default: false
        description: Boolean that indicates if the .changes (changelog) file should be updated.
      obs_project:
        type: string
        required: true
        description: The OBS project to commit changes to.    
    secrets:
      OBS_USER:
        required: true
      OBS_PASS:
        required: true

concurrency: ${{ github.workflow }}-${{ inputs.obs_project }}


env:
  PACKAGE: supportutils-plugin-trento
  FOLDER: packaging/suse
  OBS_PROJECT: ${{ inputs.obs_project }}
  AUTHOR_EMAIL: trento-developers@suse.com
jobs:
 
  obs-commit:
    name: Commit to OBS project ${{ matrix.obs_project_target }}
    runs-on: ubuntu-24.04
    container:
      image: ghcr.io/trento-project/continuous-delivery:main
      env:
        DEST_FOLDER: "/tmp/osc_project"
      options: -u 0:0
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Configure OSC
        env:
          OBS_USER: ${{ secrets.OBS_USER }}
          OBS_PASS: ${{ secrets.OBS_PASS }}
        run: |
          mkdir -p $HOME/.config/osc
          cp /home/osc/.config/osc/oscrc $HOME/.config/osc
          /scripts/init_osc_creds.sh
      - name: Prepare _service file
        run: |
          sed -i 's~%%REVISION%%~${{ github.sha }}~' $SOURCE_DIR/_service && \
          sed -i 's~%%REPOSITORY%%~${{ github.repository }}~' $SOURCE_DIR/_service && \
          sed -i 's~%%VERSION%%~${{ steps.get_version_from_git.outputs.version }}~' $SOURCE_DIR/_service
      - name: Prepare .changes file
        if: inputs.update_changelog
        env:
          GITHUB_OAUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=${{ steps.get_version_from_git.outputs.version }}
          REPOSITORY=${{ github.repository }}
          CHANGES_FILE=${OBS_PACKAGE_NAME}.changes
          /scripts/gh_release_to_obs_changeset.py $REPOSITORY -a $AUTHOR_EMAIL -t $VERSION -f $CHECKOUT_DIR/$CHANGES_FILE
      - name: Update sources
        run: |
          cp $SOURCE_DIR/_service $CHECKOUT_DIR
          cp $SOURCE_DIR/${OBS_PACKAGE_NAME}.spec $CHECKOUT_DIR
          pushd $CHECKOUT_DIR
          rm -vf *.tar.gz
          osc service manualrun
          rm -vf *.tgz
          popd
          cp deps.tar.gz $CHECKOUT_DIR
      - name: Commit to OBS
        run: |
          pushd $CHECKOUT_DIR
          osc ar
          osc commit -m "GitHub Actions automated update to reference ${{ github.sha }}"